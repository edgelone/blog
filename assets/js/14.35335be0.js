(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{502:function(s,t,a){"use strict";a.r(t);var e=a(4),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"精通redis-二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#精通redis-二"}},[s._v("#")]),s._v(" 精通redis(二)")]),s._v(" "),a("h2",{attrs:{id:"预备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预备"}},[s._v("#")]),s._v(" 预备")]),s._v(" "),a("h3",{attrs:{id:"bio时期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bio时期"}},[s._v("#")]),s._v(" BIO时期")]),s._v(" "),a("p",[s._v("client会对内核kernel建立一个个的链接,内核会针对fd(文件描述符)建立read,此时socket是阻塞的")]),s._v(" "),a("p",[s._v("jvm: 一个线程的成本,线程栈默认1MB")]),s._v(" "),a("ul",[a("li",[s._v("线程多了,调度成本高 cpu浪费")]),s._v(" "),a("li",[s._v("内存成本")])]),s._v(" "),a("h3",{attrs:{id:"nio时期-同步非阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nio时期-同步非阻塞"}},[s._v("#")]),s._v(" NIO时期(同步非阻塞)")]),s._v(" "),a("p",[s._v("kernel不再建立block socket,而是只有一个nonblock, socket去建立read,轮询fd,轮询发生在用户空间")]),s._v(" "),a("p",[s._v("依然存在问题,如果有1000fd,代表用户进程轮询调用1000次kernel,成本问题")]),s._v(" "),a("h3",{attrs:{id:"nio-多路复用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nio-多路复用"}},[s._v("#")]),s._v(" NIO(多路复用)")]),s._v(" "),a("p",[s._v("kernel引入select,一次性传入多个fd,返回有数据的fd,减少用户空间的操作,减少用户态内核态的切换")]),s._v(" "),a("p",[s._v("仍然需要自己read和write数据,用户态内核态传递数据成本高")]),s._v(" "),a("h3",{attrs:{id:"伪aio-epoll"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪aio-epoll"}},[s._v("#")]),s._v(" 伪AIO(epoll)")]),s._v(" "),a("ul",[a("li",[s._v("create epfd 注册到红黑树")]),s._v(" "),a("li",[s._v("ctl add  del std")]),s._v(" "),a("li",[s._v("wait")])]),s._v(" "),a("p",[s._v("共享空间 mmap 使用红黑树 链表")]),s._v(" "),a("p",[s._v("1000个fd会直接存入共享空间,内核会read后写入对应内存空间")]),s._v(" "),a("p",[s._v("与zeroCopy不一样,zeroCopy使用sendFile(out,in)")]),s._v(" "),a("p",[s._v("zeroCopy+mmap = kafka")]),s._v(" "),a("h2",{attrs:{id:"redis特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis特性"}},[s._v("#")]),s._v(" redis特性")]),s._v(" "),a("p",[s._v("使用了epoll,数据直接写入mmap")]),s._v(" "),a("p",[s._v("内存数据库")]),s._v(" "),a("p",[s._v("redis是单线程单进程处理用户的数据,epoll内存寻址纳秒级别,client请求网卡响应毫秒级,所以并发十万以下不会存在秒级等待的情况")]),s._v(" "),a("p",[s._v("redis的顺序性是每个连接内的")]),s._v(" "),a("p",[s._v("redis默认会有16个数据库(0-15) 相互隔离")]),s._v(" "),a("h2",{attrs:{id:"redis-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-cli"}},[s._v("#")]),s._v(" redis-cli")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("\nUsage: redis-cli "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTIONS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cmd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("arg "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("arg "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  -h "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("hostname"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("      Server "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  -p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("          Server port "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  -s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("socket"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("        Server socket "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("overrides "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v(" and port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  -a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("      Password to use when connecting to the server.\n                     You can also use the REDISCLI_AUTH environment\n                     variable to pass this password "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" safely\n                     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("if both are used, this argument takes predecence"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  -u "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("uri"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           Server URI.\n  -r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("repeat"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("        Execute specified "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" N times.\n  -i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("interval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("      When -r is used, waits "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("interval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" seconds per command.\n                     It is possible to specify sub-second "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("times")]),s._v(" like -i "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v(".\n  -n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("            Database number.\n  -x                 Read last argument from STDIN.\n  -d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("delimiter"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     Multi-bulk delimiter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" raw formatting "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  -c                 Enable cluster mode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("follow -ASK and -MOVED redirections"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  --raw              Use raw formatting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" replies "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default when STDOUT is\n                     not a "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  --no-raw           Force formatted output even when STDOUT is not a tty.\n  --csv              Output "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" CSV format.\n  --stat             Print rolling stats about server: mem, clients, "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  --latency          Enter a special mode continuously sampling latency.\n                     If you use this mode "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" an interactive session it runs\n                     forever displaying real-time stats. Otherwise "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" --raw or\n                     --csv is specified, or "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" you redirect the output to a non\n                     TTY, it samples the latency "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" second "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("you can use\n                     -i to change the interval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" produces a single output\n                     and exits.\n  --latency-history  Like --latency but tracking latency changes over time.\n                     Default "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" interval is "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" sec. Change it using -i.\n  --latency-dist     Shows latency as a spectrum, requires xterm "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("256")]),s._v(" colors.\n                     Default "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" interval is "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" sec. Change it using -i.\n  --lru-test "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("keys"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  Simulate a cache workload with an "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("-20 distribution.\n  --replica          Simulate a replica showing commands received from the master.\n  --rdb "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   Transfer an RDB dump from remote server to "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" file.\n  --pipe             Transfer raw Redis protocol from stdin to server.\n  --pipe-timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" In --pipe mode, abort with error "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" after sending all data.\n                     no reply is received within "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" seconds.\n                     Default timeout: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(". Use "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" to "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" forever.\n  --bigkeys          Sample Redis keys looking "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" keys with many elements "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("complexity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  --memkeys          Sample Redis keys looking "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" keys consuming a lot of memory.\n  --memkeys-samples "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Sample Redis keys looking "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" keys consuming a lot of memory.\n                     And define number of key elements to sample\n  --hotkeys          Sample Redis keys looking "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" hot keys.\n                     only works when maxmemory-policy is *lfu.\n  --scan             List all keys using the SCAN command.\n  --pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pat"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("    Useful with --scan to specify a SCAN pattern.\n  --intrinsic-latency "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("sec"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Run a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" to measure intrinsic system latency.\n                     The "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" will run "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the specified amount of seconds.\n  --eval "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("      Send an EVAL "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" using the Lua script at "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".\n  --ldb              Used with --eval "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" the Redis Lua debugger.\n  --ldb-sync-mode    Like --ldb but uses the synchronous Lua debugger, "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n                     this mode the server is blocked and script changes are\n                     not rolled back from the server memory.\n  --cluster "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("opts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n                     Cluster Manager "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" and arguments "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("see below"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  --verbose          Verbose mode.\n  --no-auth-warning  Don"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t show warning message when using password on command\n                     line interface.\n  --help             Output this help and exit.\n  --version          Output version and exit.\n\nCluster Manager Commands:\n  Use --cluster help to list all available cluster manager commands.\n\nExamples:\n  cat /etc/passwd | redis-cli -x set mypasswd\n  redis-cli get mypasswd\n  redis-cli -r 100 lpush mylist x\n  redis-cli -r 100 -i 1 info | grep used_memory_human:\n  redis-cli --eval myscript.lua key1 key2 , arg1 arg2 arg3\n  redis-cli --scan --pattern '")]),s._v("*:12345*'\n\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Note: when using --eval the comma separates KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" from ARGV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nWhen no "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" is given, redis-cli starts "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" interactive mode.\nType "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"help"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" interactive mode "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" information on available commands\nand settings.\n")])])]),a("p",[s._v("进入redis-cli可通过help查看文档")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("To get "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" about Redis commands type:\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"help @<group>"')]),s._v(" to get a list of commands "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("group"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"help <command>"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" on "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"help <tab>"')]),s._v(" to get a list of possible "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" topics\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"quit"')]),s._v(" to "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n\nTo "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" redis-cli preferences:\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('":set hints"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" online hints\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('":set nohints"')]),s._v(" disable online hints\nSet your preferences "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" ~/.redisclirc\n")])])]),a("p",[s._v("如help @string")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" @string\n")])])]),a("ul",[a("li",[a("p",[s._v("set nx")]),s._v(" "),a("p",[s._v("不存在则设置,简单的分布式锁应用")])])]),s._v(" "),a("h2",{attrs:{id:"string-byte数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-byte数组"}},[s._v("#")]),s._v(" string(Byte数组)")]),s._v(" "),a("ul",[a("li",[s._v("字符串类操作\n"),a("ul",[a("li",[s._v("正反向索引")])])]),s._v(" "),a("li",[s._v("数值类操作")]),s._v(" "),a("li",[s._v("bitmap")])]),s._v(" "),a("p",[s._v("redis key中会描述value的类型,type可以查看value类型")]),s._v(" "),a("p",[s._v("object encoding会看到对象类型")]),s._v(" "),a("h3",{attrs:{id:"二进制安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制安全"}},[s._v("#")]),s._v(" 二进制安全")]),s._v(" "),a("ul",[a("li",[s._v("字节流")]),s._v(" "),a("li",[s._v("字符流")])]),s._v(" "),a("p",[s._v("redis只存入了字节流,不对数据做编解码 就是二进制安全")]),s._v(" "),a("p",[s._v("redis的编码不影响字节,如果客户端写入中文,则根据编码方式影响写入redis的字节数据")]),s._v(" "),a("p",[s._v("redis-cli --raw  触发编码集格式化,会通过编码集对value取出进行编码,但是不影响redis内字节数组")]),s._v(" "),a("p",[s._v("===多人多端公用redis情况下  需要约定统一编码方式===")]),s._v(" "),a("h3",{attrs:{id:"自带一部分原子性操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自带一部分原子性操作"}},[s._v("#")]),s._v(" 自带一部分原子性操作")]),s._v(" "),a("p",[s._v("如 GETSET  mset")]),s._v(" "),a("h2",{attrs:{id:"位图-bitmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位图-bitmap"}},[s._v("#")]),s._v(" 位图(bitmap)")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("一个字节8个二进制位")])]),s._v(" "),a("li",[a("p",[s._v("第一个字节索引是0,第二个是1")])]),s._v(" "),a("li",[a("p",[s._v("二进制位索引")])])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('127.0.0.1:6379> setbit k1 1 1\n(integer) 0\n127.0.0.1:6379> STRLEN k1\n(integer) 1\n127.0.0.1:6379> get k1\n"@"\n127.0.0.1:6379> setbit k1 7 1\n(integer) 0\n127.0.0.1:6379> get k1\n"A"\n127.0.0.1:6379> STRLEN k1\n(integer) 1\n127.0.0.1:6379> setbit k1 9 1\n(integer) 0\n127.0.0.1:6379> STRLEN k1\n(integer) 2\n127.0.0.1:6379> get k1\n"A@"\n')])])]),a("p",[s._v("setbit k1 1 1  实际上是对k1的二进制位索引为1的位置设置1")]),s._v(" "),a("p",[s._v("setbit k1 9 1  是对k1的二进制位索引为9的位置(实际上是第二个字节了)设置1")]),s._v(" "),a("p",[s._v("字节对应到ASCII码")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("bit操作")]),s._v(" "),a("ul",[a("li",[s._v("bitpos")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" bitpos\n\nBITPOS key bit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nsummary: Find first bit "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a string\nsince: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.8")]),s._v(".7\ngroup: string\n\n")])])]),a("ul",[a("li",[s._v("bitcount")]),s._v(" "),a("li",[s._v("bitop")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SETBIT k1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SETBIT k1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" get k1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SETBIT k2 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SETBIT k2 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" get k2\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" bitop and k3 k1 k2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" get k3\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" bitop or k4 k1 k2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" get k4\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v("\n")])])])])]),s._v(" "),a("h3",{attrs:{id:"位图应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位图应用场景"}},[s._v("#")]),s._v(" 位图应用场景")]),s._v(" "),a("ul",[a("li",[s._v("用户系统  统计用户登录天数,且窗口随机(成本复杂度)")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# boss第二天登录\n127.0.0.1:6379> setbit boss 1 1\n(integer) 0\n# boss第8天登录\n127.0.0.1:6379> setbit boss 7 1\n(integer) 0\n# boss第365天登录\n127.0.0.1:6379> setbit boss 364 1\n(integer) 0\n127.0.0.1:6379> STRLEN boss\n(integer) 46\n# 查询最后8天登录\n127.0.0.1:6379> bitcount boss -2 -1\n(integer) 1\n")])])]),a("ul",[a("li",[a("p",[s._v("京东618活动,当天登录过的用户就可以发礼物,假如存在2亿用户,需要准备多少礼物")]),s._v(" "),a("p",[s._v("活跃用户统计(随机窗口) 1号到3号 登录过 视为活跃")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 日期为key 用户ID映射到bit位\nsetbit 20200618 1 1\n")])])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);